# ---------------------------------------------------------------------------
# Модуль содержит класс для одиночного объекта, в котором хранятся данные
# необходимые для выполнения скрипта:
# очередь выполнения, объекты команд, стек для циклов и подпрограмм, источник данных.
# Этот объект передается методам объектов команд в качестве аргумента:
# ---------------------------------------------------------------------------


from collections import deque


class DataForWorer:
    """ Данные для исполнителя скрипта """
    def __init__(self):
        """ Инициализация

         В очереди команд идентификаторы под которыми они записаны в словаре объектов команд и
         в виджете для визуального представления. Очередь определяет последовательность исполнения.

         """
        self.queue_command = []  # Очередь команд
        self.obj_command = dict()  # Объекты команд по ключам из очереди
        self.id_command = 0  # Счетчик для идентификаторов команд
        self.pointer_command = 0  # Указатель на исполняемую команду

        self.stack = deque()  # Стек для циклов и подпрограмм

        # В качестве источника данных используются 2 словаря. В качестве ключей в них Имена полей
        # В первом словаре значения - это списки данных {'key': [list data]}
        # Во втором указатели на элементы списков первого словаря {'key': int}
        self.data_source = dict()  # Источник данных
        self.pointers_data_source = dict()  # Указатели на позицию чтения из поля

        self.func_execute_command = None  # Функция выполняющая 1 команду макроса

    def next_id(self):
        """ Генерирует id новой команды """
        self.id_command += 1
        return f'cmd{self.id_command}'

